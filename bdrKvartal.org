# -*- mode: org; -*-
#+TITLE:
#+AUTHOR:
#+DATE:

#+LANGUAGE:  no
#+OPTIONS:   H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:(not LOGBOOK) todo:t pri:nil tags:t
#+MACRO: newline @@latex:\\@@ @@html:<br>@@
#+MACRO: break @@latex:\linebreak@@ @@html:<br>@@

#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:

#+latex_header: \usepackage{fullpage}
#+LATEX_HEADER: \usepackage[margin=0.5in]{geometry}
#+LATEX:\flushleft

#+CAPTION: Setup
#+ATTR_RAVEL: echo=FALSE, results=FALSE, message=FALSE, warning=FALSE
#+BEGIN_SRC R
  rm(list=ls())
  setwd("~/OUS/BDR/Rapport/Data")
  ##install.packages("~/Git-work/Packages/nbReg_0.0.0.9000.tar.gz")
  Filnavn <- "20160630bdr2.sav"

  #### Valg Sykehus ####

  Sykehus = 18

  #####################

  require("nbReg")
  RegData <- suppressWarnings(nbFile(filnavn=Filnavn))
  RegData2 <- foreign::read.spss(Filnavn, to.data.frame = TRUE, use.value.labels = FALSE) #not to convert to factor
  Data <- nbClean(RegData)
  sykNavn <- Data$SykehusNavn[Data$SykehusKode == Sykehus][1]


  year <- as.numeric(format(Sys.Date(), "%Y"))
  lastyr <- as.numeric(year - 1)

  ## hbA1c CI
  sumCI <- function(data, maalvar, gpvars, conf.Int=.95) {

      summ = data %>%
          filter_(.dots = lazyeval::interp(~!is.na(var), var = as.name(maalvar))) %>%
          group_by_(.dots = gpvars) %>%
          summarise_(.dots = list(
                         N = lazyeval::interp(~n()),
                         Mean =  lazyeval::interp(~mean(var, na.rm = TRUE), var = as.name(maalvar)),
                         SD =  lazyeval::interp(~sd(var, na.rm = T), var = as.name(maalvar))))
      ## For sample
      ## ciMult = qt(conf.Int/2 + .5, summ$N-1) #konvertere f.eks CI=95% blir .975

      ## For total populasjon
      ciMult = qt(conf.Int/2 + .5, summ$N) #konvertere f.eks CI=95% blir .975

      summ$SE = summ$SD/sqrt(summ$N)
      summ$CI = ciMult * summ$SE

      summ.na.zero <- data %>%
          expand_(gpvars) %>%
          left_join(summ)

      summ.na.zero[is.na(summ.na.zero)] <- 0

      return(invisible(summ.na.zero)) }

  ## Alder kategori
  alder.kat2 <- function(x, lower, upper, by,
                         sep = "-") {
      labs <- paste0(c(paste(seq(lower, upper - by, by = by),
                             seq(lower + by - 1, upper - 1, by = by),
                             sep = sep),
                       paste(upper, "+", sep = "")), " år")
      cut(floor(x), breaks = c(seq(lower, upper, by = by), Inf),
          include.lowest = TRUE, right = FALSE, labels = labs)
  }

  Data$AlderKat3 <- alder.kat2(Data$Alder, 0, 15, 5)

  ## Libraries
  library(dplyr)
  library(ggplot2)
  library(knitr)

  ##lokal og andre
  Data$sykValg <- ifelse(Data$SykehusKode == Sykehus, 1, 2)

  dataLokal <- filter(Data, sykValg == 1) #lokal sykehus
  dataNorge <- filter(Data, sykValg == 2) #øvrige sykehusene
#+END_SRC

* Kvartalsrapport for \Sexpr{sykNavn}

Dato: \Sexpr{format(Sys.Date(), "%d %m %Y")}
** Antall førstegangsregistreringer
Antall førstegangsregistreringer og årskontroller tatt i avdelingen i
\Sexpr{year}. Estimert andel årskontroller (%) er basert på totalt antall innleverte
årskontroller i \Sexpr{year - 1}.

#+CAPTION: Figure 1
#+NAME: Plot1
#+ATTR_RAVEL: echo=FALSE, results="asis",
#+BEGIN_SRC R
  sykYear <- dataLokal %>%
      select(Year, inn_Type, AlderKat3) %>%
      filter(Year >= lastyr, !grepl("Poliklinisk", inn_Type)) %>%
      group_by(inn_Type, Year, AlderKat3) %>%
      summarise(
          count = n())

  sykYear01 <- sykYear %>%
      group_by(inn_Type, Year) %>%
      mutate(Totalt2 = sum(count),
      dumm = ifelse(grepl("Årskontroll", inn_Type), 2, 1))

  library(tidyr)
  sykYearLong <- spread(sykYear01, key=AlderKat3, value = count)

  tblBasis <- sykYearLong[order(sykYearLong$dumm),]

  ## Antall tabell
  tbl01 <- filter(tblBasis, Year==2016)
  buang <- c("Year", "dumm")
  tbl01 <- tbl01[,!(names(tbl01) %in% buang)]

  ## Estimerte andel tabell
  tbl02 <- tblBasis[c(3:4),]
  tbl02 <- round(100*tbl02[tbl02$Year==year, (-1)]/tbl02[tbl02$Year==lastyr, c(-1)])
  tbl02 <- tbl02[,!(names(tbl02) %in% buang)]
  tbl02 <- mutate(tbl02, inn_Type = "Estimert andel motatte årskontroller (%)")
  col <- grep("inn_Type", names(tbl02)) #finne index
  tbl03 <- tbl02[,c(col,(1:ncol(tbl02))[-col])]

  ## Kobinere
  tblFinal <- rbind(tbl03,tbl01[,names(tbl03)])
  tblFinal <- mutate(tblFinal, dumm = ifelse(grepl("Estimert", inn_Type), 2, 1))
  tblFinal <- tblFinal[order(tblFinal$dumm),]
  tblFinal <- mutate(tblFinal, Totalt = Totalt2)
  kill <- c("Totalt2", "dumm")
  tblFinal <- tblFinal[,!names(tblFinal) %in% kill]
  tblFinal <- as.data.frame(tblFinal)
  tblFinal[is.na(tblFinal)] <- 0

  library(xtable)
  ## tblF <- xtable(tblFinal)
  ##digits(tblF) <- c(0,0,0,0,0,0,0)
  ## print(tblF, include.rownames=FALSE)

  print(xtable(tblFinal, digits=0),include.rownames=F)
#+END_SRC

#+RESULTS: Plot1

** Andelingen HbA1c mot landsgjennomsnittet

#+CAPTION: Figur 2
#+NAME: Plot2
#+ATTR_RAVEL: echo=FALSE, message=FALSE, warning=FALSE, fig.height=6, fig.align='center', dev='pdf', fig.path="graphics/bdr"
#+BEGIN_SRC R
  ## ## For å ta bort Mean hvis n=1
  ## noMean <- function(x) {
  ##     x$Mean[x$N <= 1] <- 0
  ##     return(x)
  ## }

  ## Bruk nbReg pakke
  ## Total
  hbaAlleT <- sumCI(data = Data, maalvar = "hba", gpvars = "AlderKat3")
  hbaAlle <- sumCI(data = Data, maalvar = "hba", gpvars = c("AlderKat3", "kjonn"))
  hbaAlle <- dplyr::full_join(hbaAlle, hbaAlleT)
  hbaAlle$kjonn <- ifelse(is.na(hbaAlle$kjonn), 3, hbaAlle$kjonn)
  hbaAlle$kjonn <- factor(hbaAlle$kjonn,
                          levels = c(1:3),
                          labels = c("Gutt","Jente", "Alle"))

  ## Ta bort Mean hvis n=1
  ## hbaAlle <- noMean(hbaAlle)

  ## Kjønn lokal 1:lokal 2:øvrige
  hbaLokalT <- sumCI(data=dplyr::filter(Data, sykValg==1), "hba", gpvars = "AlderKat3")
  hbaLokalT <- mutate(hbaLokalT, kjonn = as.integer(3))
  hbaLokal <- sumCI(data=dplyr::filter(Data, sykValg==1), "hba", gpvars = c("AlderKat3","kjonn"))
  hbaLokal$kjonn <- as.integer(hbaLokal$kjonn)
  hbaLokal <- dplyr::full_join(hbaLokalT, hbaLokal)
  hbaLokal$kjonn <- ifelse(is.na(hbaLokal$kjonn), 3, hbaLokal$kjonn)
  hbaLokal$kjonn <- factor(hbaLokal$kjonn,
                           levels = c(1:3),
                           labels = c("Gutt","Jente", "Alle"))

  ## Definere min og maks for yx-aksen og farge
  ymin <- ifelse(min(hbaAlle$Mean) < 5, min(hbaAlle$Mean) + 0.3, 5)
  ymax <- max(hbaAlle$Mean) + 0.3

  library("ggplot2")
  gg <- ggplot(NULL, aes(x=AlderKat3, y=Mean, fill = kjonn)) + theme_bw()
  gg.lokal <- gg +
      geom_bar(data = hbaLokal, position = position_dodge(.9), stat = "identity") +
      coord_cartesian(ylim = c(ymin,ymax)) +
      scale_fill_manual(values = c( "#99CCFF", "#6699CC", "#003399")) + #hente farger
      theme(legend.position = 'top',
            legend.title = element_blank(),
            axis.text = element_text(size = 10),
            legend.text = element_text(size = 10),
            panel.border = element_blank(),
            panel.grid.major.y = element_line(colour = "black"),
            panel.grid.minor.y = element_blank(),
            panel.grid.major.x = element_blank(),
            axis.ticks = element_blank())


  gg.Alle <- gg.lokal +
      geom_point(data = hbaAlle, stat = 'identity', size = 5, shape = 18,
                 position = position_dodge(.9), color = "#CC3300") +
      guides(fill = guide_legend(override.aes = list(shape = NA))) +
      ylab("HbA1c") +  xlab(NULL) +
      annotate("point", x = 0.7, y = ymax - 0.1, shape = 18, size = 5, color = "#CC3300") +
      annotate("text", x = 1.3, y = ymax - 0.1, label = "= Landsgjennomsnittet")



  gg.tab1 <- ggplot(hbaLokal,
                    aes(x = AlderKat3, y = factor(kjonn), label = format(Mean, digits = 3), colour=factor(kjonn))) +
      geom_text(size = 3, colour="black") +
      scale_y_discrete(limits=c("Alle", "Jente", "Gutt")) +
      theme(panel.grid.major = element_blank(),
            legend.position = "none", #ta bort legend
            panel.border = element_blank(),
            axis.text = element_text(size = 10),
            axis.text.x = element_blank(),
            axis.ticks = element_blank()) +
      ylab(NULL) +  xlab("Gjennomsnitt HbA1c i avdelingen")


  library(grid)
  Layout <- grid.layout(nrow = 2, ncol = 1, height = unit(c(1.5,0.30), c("null", "null")))
  ## grid.show.layout(Layout)
  vplayout <- function(...){
      grid.newpage()
      pushViewport(viewport(layout = Layout))
  }

  subplot <- function(x, y) viewport(layout.pos.row = x,
                                     layout.pos.col = y)
  mmplot <- function(a, b) {
      vplayout()
      print(a, vp = subplot(1, 1))
      print(b, vp = subplot(2, 1))
  }

  mmplot(gg.Alle, gg.tab1)
#+END_SRC

#+LATEX: \pagebreak

** Avdelingens kompletthet av data

#+NAME: Plot3
#+ATTR_RAVEL: echo=FALSE, message=FALSE, warning=FALSE, fig.height=4, fig.align='center', dev='pdf', fig.path="graphics/bdr"
#+BEGIN_SRC R
  ## white space og NA
  trim <- function(x) {
      x <- gsub("(^[[:space:]]+|[[:space:]]+$)", "", x)
      x[x==""] <- NA
      x <- ifelse(is.na(x), 0, 1)
      return(x)
  }

  dataLokal$hba1c <- as.factor(trim(dataLokal$lab_HbA1cAkerVerdi))
  dataLokal$insulinsjokk <- as.factor(trim(dataLokal$und_inssjokk))
  dataLokal$ketoacidose <- as.factor(trim(dataLokal$und_ketoacidose))
  dataLokal$Oye <- as.factor(trim(dataLokal$und_Oye))
  dataLokal$infiltrater <- as.factor(trim(dataLokal$und_infiltrater))
  dataLokal$hypo <- as.factor(trim(dataLokal$und_syk_hypo))
  dataLokal$hype <- as.factor(trim(dataLokal$und_syk_hype))
  dataLokal$innAkt <- as.factor(trim(dataLokal$Inn_Akt))
  dataLokal$labLipLDL <- as.factor(trim(dataLokal$lab_lip_LDL))
  dataLokal$labResProve <- as.factor(trim(dataLokal$lab_res_1prove))

  komplett <- dplyr::select(dataLokal, c(hba1c, insulinsjokk, ketoacidose, Oye, infiltrater, hypo, hype, innAkt, labLipLDL, labResProve))

  tblFun <- function(x){
      tbl <- table(x)
      res <- cbind(tbl,round(prop.table(tbl)*100,1))
      colnames(res) <- c('Count','Percentage')
      res
  }

  navn <- c("hba1c", "insulinsjokk", "ketoacidose", "Oye", "infiltrater", "hypo", "hype", "innAkt",
            "labLipLDL", "labResProve")
  komp1 <- do.call(rbind, lapply(komplett, tblFun))
  maxkomp <- dim(komp1)[1]
  komp2 <- komp1[seq(0,maxkomp,2),]
  komp2 <- data.frame(komp2, row.names=navn)
  komp2 <- dplyr::add_rownames(komp2, "navn") #convert row.names
  ## komp2$navn <- rownames(komp2) #create col with navn

  ggplot(komp2, aes(x=navn,y = Percentage)) + geom_bar(stat="identity", fill =  "#003399") +
      coord_flip() + xlab("") + ylab("Andel (%)") +
      ylim(0,100) +
      geom_text(aes(label = Percentage), hjust= -0.3, color="black") +
      theme(
          axis.text.y = element_text(size = 11, color = "black"),
          plot.margin = unit(c(0,2,0.5,0.5), "cm"),
          panel.background = element_blank(),
          panel.border = element_blank(),
          panel.grid.major.x = element_blank(),
          panel.grid.minor.y = element_blank(),
          panel.grid.major.x = element_blank(),
          axis.ticks.y = element_blank(),
          axis.line.x = element_line(size = 0.5))
#+END_SRC
